# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `ActiveAdmin::BaseController`.
# Please instead update this file by running `bin/tapioca dsl ActiveAdmin::BaseController`.


class ActiveAdmin::BaseController
  sig { returns(HelperProxy) }
  def helpers; end

  module HelperMethods
    include ::Turbo::DriveHelper
    include ::Turbo::FramesHelper
    include ::Turbo::IncludesHelper
    include ::Turbo::StreamsHelper
    include ::ActionView::Helpers::CaptureHelper
    include ::ActionView::Helpers::OutputSafetyHelper
    include ::ActionView::Helpers::TagHelper
    include ::Turbo::Streams::ActionHelper
    include ::ActionText::ContentHelper
    include ::ActionText::TagHelper
    include ::Importmap::ImportmapTagsHelper
    include ::Ransack::Helpers::FormHelper
    include ::ActionController::Base::HelperMethods
    include ::ApplicationHelper
    include ::DeviseHelper
    include ::ApplicationController::HelperMethods
    include ::InheritedResources::Base::HelperMethods
    include ::MethodOrProcHelper
    include ::ActiveAdminAssets::URLPatch
    include ::ActiveAdmin::LayoutHelper
    include ::ActiveAdmin::FormHelper
    include ::ActiveAdmin::BreadcrumbHelper
    include ::ActiveAdmin::AutoLinkHelper
    include ::ActiveAdmin::DisplayHelper
    include ::ActiveAdmin::IndexHelper

    sig { returns(T.untyped) }
    def active_admin_authorization; end

    sig { returns(T.untyped) }
    def active_admin_config; end

    sig { returns(T.untyped) }
    def active_admin_namespace; end

    sig { params(action: T.untyped, subject: T.untyped).returns(T.untyped) }
    def authorize!(action, subject = T.unsafe(nil)); end

    sig { params(action: T.untyped, subject: T.untyped).returns(T.untyped) }
    def authorized?(action, subject = T.unsafe(nil)); end

    sig { params(download_links: T.untyped).returns(T.untyped) }
    def build_download_formats(download_links); end

    sig { returns(T.untyped) }
    def current_active_admin_user; end

    sig { returns(T.untyped) }
    def current_active_admin_user?; end

    sig { returns(T.untyped) }
    def current_menu; end

    sig { params(item: T.untyped).returns(T.untyped) }
    def current_menu_item?(item); end

    sig { returns(T.untyped) }
    def page_presenter; end

    sig { returns(T.untyped) }
    def page_title; end
  end

  class HelperProxy < ::ActionView::Base
    include HelperMethods
  end
end
