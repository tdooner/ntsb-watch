# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `arbre` gem.
# Please instead update this file by running `bin/tapioca gem arbre`.


# source://arbre//lib/arbre.rb#6
module Arbre; end

# source://arbre//lib/arbre/component.rb#3
class Arbre::Component < ::Arbre::HTML::Div
  # By default components render a div
  #
  # source://arbre//lib/arbre/component.rb#5
  def tag_name; end
end

# The Arbre::Context class is the frontend for using Arbre.
#
# The simplest example possible:
#
#     html = Arbre::Context.new do
#       h1 "Hello World"
#     end
#
#     html.to_s #=> "<h1>Hello World</h1>"
#
# The contents of the block are instance eval'd within the Context
# object. This means that you lose context to the outside world from
# within the block. To pass local variables into the Context, use the
# assigns param.
#
#     html = Arbre::Context.new({one: 1}) do
#       h1 "Your number #{one}"
#     end
#
#     html.to_s #=> "Your number 1"
#
# source://arbre//lib/arbre/context.rb#27
class Arbre::Context < ::Arbre::Element
  # Initialize a new Arbre::Context
  #
  # @param assigns [Hash] A hash of objects that you would like to be
  #   available as local variables within the Context
  # @param helpers [Object] An object that has methods on it which will become
  #   instance methods within the context.
  # @return [Context] a new instance of Context
  # @yield [] The block that will get instance eval'd in the context
  #
  # source://arbre//lib/arbre/context.rb#37
  def initialize(assigns = T.unsafe(nil), helpers = T.unsafe(nil), &block); end

  # source://arbre//lib/arbre/context.rb#48
  def arbre_context; end

  # source://arbre//lib/arbre/context.rb#52
  def assigns; end

  # source://arbre//lib/arbre/context.rb#65
  def bytesize; end

  # source://arbre//lib/arbre/context.rb#85
  def current_arbre_element; end

  # source://arbre//lib/arbre/context.rb#56
  def helpers; end

  # source://arbre//lib/arbre/context.rb#60
  def indent_level; end

  # source://arbre//lib/arbre/context.rb#68
  def length; end

  # source://arbre//lib/arbre/context.rb#77
  def method_missing(method, *args, **_arg2, &block); end

  # @raise [ArgumentError]
  #
  # source://arbre//lib/arbre/context.rb#89
  def with_current_arbre_element(tag); end

  # @raise [ArgumentError]
  #
  # source://arbre//lib/arbre/context.rb#95
  def within(tag); end

  private

  # Caches the rendered HTML so that we don't re-render just to
  # get the content length or to delegate a method to the HTML
  #
  # source://arbre//lib/arbre/context.rb#101
  def cached_html; end

  # @return [Boolean]
  #
  # source://arbre//lib/arbre/context.rb#70
  def respond_to_missing?(method, include_all); end
end

# source://arbre//lib/arbre/element/builder_methods.rb#3
class Arbre::Element
  include ::Arbre::Element::BuilderMethods
  include ::Arbre::Rails::Rendering
  extend ::Arbre::Element::BuilderMethods::ClassMethods

  # @return [Element] a new instance of Element
  #
  # source://arbre//lib/arbre/element.rb#14
  def initialize(arbre_context = T.unsafe(nil)); end

  # source://arbre//lib/arbre/element.rb#147
  def +(element); end

  # source://arbre//lib/arbre/element.rb#65
  def <<(child); end

  # source://arbre//lib/arbre/element.rb#37
  def add_child(child); end

  # source://arbre//lib/arbre/element.rb#81
  def ancestors; end

  # Returns the value of attribute arbre_context.
  #
  # source://arbre//lib/arbre/element.rb#12
  def arbre_context; end

  # source://arbre//lib/arbre/element.rb#20
  def assigns; end

  # source://arbre//lib/arbre/element.rb#32
  def build(*args, &block); end

  # Returns the value of attribute children.
  #
  # source://arbre//lib/arbre/element.rb#12
  def children; end

  # @return [Boolean]
  #
  # source://arbre//lib/arbre/element.rb#69
  def children?; end

  # source://arbre//lib/arbre/element.rb#119
  def content; end

  # source://arbre//lib/arbre/element.rb#94
  def content=(contents); end

  # source://arbre//lib/arbre/element.rb#131
  def each(&block); end

  # source://arbre//lib/arbre/element.rb#117
  def find_by_class(class_name); end

  # source://arbre//lib/arbre/element.rb#107
  def find_by_tag(tag_name); end

  # TODO: Shouldn't grab whole tree
  #
  # source://arbre//lib/arbre/element.rb#90
  def find_first_ancestor(type); end

  # source://arbre//lib/arbre/element.rb#109
  def get_elements_by_class_name(class_name); end

  # source://arbre//lib/arbre/element.rb#99
  def get_elements_by_tag_name(tag_name); end

  # source://arbre//lib/arbre/element.rb#24
  def helpers; end

  # source://arbre//lib/arbre/element.rb#123
  def html_safe; end

  # source://arbre//lib/arbre/element.rb#127
  def indent_level; end

  # source://arbre//lib/arbre/element.rb#135
  def inspect; end

  # Returns the value of attribute parent.
  #
  # source://arbre//lib/arbre/element.rb#11
  def parent; end

  # source://arbre//lib/arbre/element.rb#73
  def parent=(parent); end

  # @return [Boolean]
  #
  # source://arbre//lib/arbre/element.rb#77
  def parent?; end

  # source://arbre//lib/arbre/element.rb#60
  def remove_child(child); end

  # source://arbre//lib/arbre/element.rb#28
  def tag_name; end

  # source://arbre//lib/arbre/element.rb#159
  def to_a; end

  # source://arbre//lib/arbre/element.rb#156
  def to_ary; end

  # source://arbre//lib/arbre/element.rb#143
  def to_s; end

  # source://arbre//lib/arbre/element.rb#139
  def to_str; end

  private

  # Resets the Elements children
  #
  # source://arbre//lib/arbre/element.rb#164
  def clear_children!; end

  # source://arbre//lib/arbre/element.rb#176
  def method_missing(name, *args, **_arg2, &block); end
end

# source://arbre//lib/arbre/element/builder_methods.rb#4
module Arbre::Element::BuilderMethods
  mixes_in_class_methods ::Arbre::Element::BuilderMethods::ClassMethods

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def a(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def abbr(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def address(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def area(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def article(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def aside(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def audio(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def b(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def base(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def bdi(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def bdo(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def blockquote(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def body(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def br(*args, &block); end

  # source://arbre//lib/arbre/element/builder_methods.rb#22
  def build_tag(klass, *args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def button(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def canvas(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def caption(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def cite(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def code(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def col(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def colgroup(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def command(*args, &block); end

  # source://arbre//lib/arbre/element/builder_methods.rb#44
  def current_arbre_element; end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def data(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def datalist(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def dd(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def del(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def details(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def dfn(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def dialog(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def div(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def dl(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def dt(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def em(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def embed(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def fieldset(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def figcaption(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def figure(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def footer(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def form(*args, &block); end

  # source://arbre//lib/arbre/rails/forms.rb#44
  def form_for(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def h1(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def h2(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def h3(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def h4(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def h5(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def h6(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def head(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def header(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def hgroup(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def hr(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def html(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def i(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def iframe(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def img(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def input(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def ins(*args, &block); end

  # source://arbre//lib/arbre/element/builder_methods.rb#38
  def insert_tag(klass, *args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def kbd(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def keygen(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def label(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def legend(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def li(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def link(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def main(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def map(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def mark(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def menu(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def menuitem(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def meta(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def meter(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def nav(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def noscript(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def object(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def ol(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def optgroup(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def option(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def output(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#135
  def para(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def param(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def picture(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def pre(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def progress(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def q(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def rp(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def rt(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def ruby(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def s(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def samp(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def script(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def search(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def section(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def select(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def slot(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def small(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def source(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def span(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def strong(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def style(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def sub(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def summary(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def sup(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def svg(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def table(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def tbody(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def td(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def template(*args, &block); end

  # source://arbre//lib/arbre/html/text_node.rb#8
  def text_node(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def textarea(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def tfoot(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def th(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def thead(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def time(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def title(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def tr(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def track(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def u(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def ul(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def var(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def video(*args, &block); end

  # source://arbre//lib/arbre/html/html5_elements.rb#127
  def wbr(*args, &block); end

  # source://arbre//lib/arbre/element/builder_methods.rb#48
  def with_current_arbre_element(tag, &block); end

  # source://arbre//lib/arbre/element/builder_methods.rb#51
  def within(tag, &block); end

  private

  # Appends the value to the current DOM element if there are no
  # existing DOM Children and it responds to #to_s
  #
  # source://arbre//lib/arbre/element/builder_methods.rb#57
  def append_return_block(tag); end

  # Returns true if the object should be converted into a text node
  # and appended into the DOM.
  #
  # @return [Boolean]
  #
  # source://arbre//lib/arbre/element/builder_methods.rb#67
  def appendable_tag?(tag); end

  class << self
    # @private
    #
    # source://arbre//lib/arbre/element/builder_methods.rb#6
    def included(klass); end
  end
end

# source://arbre//lib/arbre/element/builder_methods.rb#10
module Arbre::Element::BuilderMethods::ClassMethods
  # source://arbre//lib/arbre/element/builder_methods.rb#12
  def builder_method(method_name); end
end

# source://arbre//lib/arbre/element/proxy.rb#4
class Arbre::Element::Proxy < ::BasicObject
  # @return [Proxy] a new instance of Proxy
  #
  # source://arbre//lib/arbre/element/proxy.rb#8
  def initialize(element); end

  # source://arbre//lib/arbre/element/proxy.rb#20
  def method_missing(method, *args, &block); end

  # @return [Boolean]
  #
  # source://arbre//lib/arbre/element/proxy.rb#12
  def respond_to?(method, include_all = T.unsafe(nil)); end
end

# Stores a collection of Element objects
#
# source://arbre//lib/arbre/element_collection.rb#5
class Arbre::ElementCollection < ::Array
  # source://arbre//lib/arbre/element_collection.rb#14
  def &(other); end

  # source://arbre//lib/arbre/element_collection.rb#6
  def +(other); end

  # source://arbre//lib/arbre/element_collection.rb#10
  def -(other); end

  # source://arbre//lib/arbre/element_collection.rb#18
  def to_s; end
end

# source://arbre//lib/arbre/html/attributes.rb#3
module Arbre::HTML; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::A < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#5
Arbre::HTML::AUTO_BUILD_ELEMENTS = T.let(T.unsafe(nil), Array)

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Abbr < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Address < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Area < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Article < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Aside < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/attributes.rb#5
class Arbre::HTML::Attributes < ::Hash
  # source://arbre//lib/arbre/html/attributes.rb#6
  def to_s; end

  protected

  # source://arbre//lib/arbre/html/attributes.rb#14
  def flatten_hash(hash = T.unsafe(nil), old_path = T.unsafe(nil), accumulator = T.unsafe(nil)); end

  # source://arbre//lib/arbre/html/attributes.rb#26
  def html_escape(s); end
end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Audio < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::B < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Base < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Bdi < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Bdo < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Blockquote < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Body < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Br < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Button < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Canvas < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Caption < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Cite < ::Arbre::HTML::Tag; end

# Holds a set of classes
#
# source://arbre//lib/arbre/html/class_list.rb#8
class Arbre::HTML::ClassList < ::Set
  # source://arbre//lib/arbre/html/class_list.rb#19
  def <<(class_names); end

  # source://arbre//lib/arbre/html/class_list.rb#13
  def add(class_names); end

  # source://arbre//lib/arbre/html/class_list.rb#21
  def to_s; end

  class << self
    # source://arbre//lib/arbre/html/class_list.rb#9
    def build_from_string(class_names); end
  end
end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Code < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Col < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Colgroup < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Command < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Data < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Datalist < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Dd < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Del < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Details < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Dfn < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Dialog < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Div < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Dl < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/document.rb#5
class Arbre::HTML::Document < ::Arbre::HTML::Tag
  # source://arbre//lib/arbre/html/document.rb#6
  def build(*args); end

  # source://arbre//lib/arbre/html/document.rb#20
  def doctype; end

  # source://arbre//lib/arbre/html/document.rb#12
  def document; end

  # source://arbre//lib/arbre/html/document.rb#16
  def tag_name; end

  # source://arbre//lib/arbre/html/document.rb#24
  def to_s; end

  protected

  # source://arbre//lib/arbre/html/document.rb#36
  def build_body; end

  # source://arbre//lib/arbre/html/document.rb#30
  def build_head; end
end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Dt < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Em < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Embed < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Fieldset < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Figcaption < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Figure < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Footer < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Form < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::H1 < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::H2 < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::H3 < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::H4 < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::H5 < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::H6 < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#124
Arbre::HTML::HTML5_ELEMENTS = T.let(T.unsafe(nil), Array)

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Head < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Header < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Hgroup < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Hr < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Html < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::I < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Iframe < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Img < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Input < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Ins < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Kbd < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Keygen < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Label < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Legend < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Li < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Link < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Main < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Map < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Mark < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Menu < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Menuitem < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Meta < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Meter < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Nav < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Noscript < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Object < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Ol < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Optgroup < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Option < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Output < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#134
class Arbre::HTML::P < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Param < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Picture < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Pre < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Progress < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Q < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Rp < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Rt < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Ruby < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::S < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Samp < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Script < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Search < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Section < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Select < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Slot < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Small < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Source < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Span < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Strong < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Style < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Sub < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Summary < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Sup < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Svg < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Table < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/tag.rb#7
class Arbre::HTML::Tag < ::Arbre::Element
  # @return [Tag] a new instance of Tag
  #
  # source://arbre//lib/arbre/html/tag.rb#14
  def initialize(*_arg0); end

  # source://arbre//lib/arbre/html/tag.rb#74
  def add_class(class_names); end

  # source://arbre//lib/arbre/html/tag.rb#49
  def attr(name); end

  # Returns the value of attribute attributes.
  #
  # source://arbre//lib/arbre/html/tag.rb#8
  def attributes; end

  # source://arbre//lib/arbre/html/tag.rb#19
  def build(*args); end

  # source://arbre//lib/arbre/html/tag.rb#87
  def class_list; end

  # Returns a string of classes
  #
  # source://arbre//lib/arbre/html/tag.rb#83
  def class_names; end

  # source://arbre//lib/arbre/html/tag.rb#34
  def extract_arguments(args); end

  # source://arbre//lib/arbre/html/tag.rb#46
  def get_attribute(name); end

  # @return [Boolean]
  #
  # source://arbre//lib/arbre/html/tag.rb#51
  def has_attribute?(name); end

  # source://arbre//lib/arbre/html/tag.rb#59
  def id; end

  # Generates and id for the object if it doesn't exist already
  #
  # source://arbre//lib/arbre/html/tag.rb#64
  def id!; end

  # source://arbre//lib/arbre/html/tag.rb#70
  def id=(id); end

  # source://arbre//lib/arbre/html/tag.rb#55
  def remove_attribute(name); end

  # source://arbre//lib/arbre/html/tag.rb#78
  def remove_class(class_names); end

  # source://arbre//lib/arbre/html/tag.rb#42
  def set_attribute(name, value); end

  # source://arbre//lib/arbre/html/tag.rb#100
  def to_s; end

  private

  # source://arbre//lib/arbre/html/tag.rb#150
  def attributes_html; end

  # @return [Boolean]
  #
  # source://arbre//lib/arbre/html/tag.rb#146
  def child_is_text?; end

  # source://arbre//lib/arbre/html/tag.rb#110
  def closing_tag; end

  # source://arbre//lib/arbre/html/tag.rb#182
  def default_id_for_prefix; end

  # source://arbre//lib/arbre/html/tag.rb#162
  def dom_class_name_for(record); end

  # source://arbre//lib/arbre/html/tag.rb#170
  def dom_id_for(record); end

  # source://arbre//lib/arbre/html/tag.rb#116
  def indent(open_tag, child_content, close_tag); end

  # @return [Boolean]
  #
  # source://arbre//lib/arbre/html/tag.rb#142
  def no_child?; end

  # source://arbre//lib/arbre/html/tag.rb#106
  def opening_tag; end

  # @return [Boolean]
  #
  # source://arbre//lib/arbre/html/tag.rb#138
  def self_closing_tag?; end

  # source://arbre//lib/arbre/html/tag.rb#154
  def set_for_attribute(record); end
end

# source://arbre//lib/arbre/html/tag.rb#114
Arbre::HTML::Tag::INDENT_SIZE = T.let(T.unsafe(nil), Integer)

# See: https://html.spec.whatwg.org/multipage/syntax.html#void-elements
#
# source://arbre//lib/arbre/html/tag.rb#11
Arbre::HTML::Tag::SELF_CLOSING_ELEMENTS = T.let(T.unsafe(nil), Array)

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Tbody < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Td < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Template < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/text_node.rb#7
class Arbre::HTML::TextNode < ::Arbre::Element
  # source://arbre//lib/arbre/html/text_node.rb#17
  def add_child(*args); end

  # source://arbre//lib/arbre/html/text_node.rb#21
  def build(string); end

  # source://arbre//lib/arbre/html/text_node.rb#25
  def class_list; end

  # source://arbre//lib/arbre/html/text_node.rb#29
  def tag_name; end

  # source://arbre//lib/arbre/html/text_node.rb#33
  def to_s; end

  class << self
    # Builds a text node from a string
    #
    # source://arbre//lib/arbre/html/text_node.rb#11
    def from_string(string); end
  end
end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Textarea < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Tfoot < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Th < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Thead < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Time < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Title < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Tr < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Track < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::U < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Ul < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Var < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Video < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/html/html5_elements.rb#127
class Arbre::HTML::Wbr < ::Arbre::HTML::Tag; end

# source://arbre//lib/arbre/rails/template_handler.rb#3
module Arbre::Rails; end

# source://arbre//lib/arbre/rails/forms.rb#4
module Arbre::Rails::Forms; end

# source://arbre//lib/arbre/rails/forms.rb#74
class Arbre::Rails::Forms::FieldsForProxy < ::Arbre::Rails::Forms::FormBuilderProxy
  # source://arbre//lib/arbre/rails/forms.rb#75
  def build(form_builder, *args, &block); end

  # source://arbre//lib/arbre/rails/forms.rb#83
  def to_s; end
end

# source://arbre//lib/arbre/rails/forms.rb#6
class Arbre::Rails::Forms::FormBuilderProxy < ::Arbre::Component
  # Returns the value of attribute form_builder.
  #
  # source://arbre//lib/arbre/rails/forms.rb#7
  def form_builder; end

  # Since label and select are Arbre Elements already, we must
  # override it here instead of letting method_missing
  # deal with it
  #
  # source://arbre//lib/arbre/rails/forms.rb#12
  def label(*args); end

  # source://arbre//lib/arbre/rails/forms.rb#16
  def select(*args); end

  private

  # source://arbre//lib/arbre/rails/forms.rb#34
  def method_missing(method, *args, **_arg2, &block); end

  # source://arbre//lib/arbre/rails/forms.rb#30
  def proxy_call_to_form(method, *args, &block); end

  # @return [Boolean]
  #
  # source://arbre//lib/arbre/rails/forms.rb#20
  def respond_to_missing?(method, include_all); end
end

# source://arbre//lib/arbre/rails/forms.rb#43
class Arbre::Rails::Forms::FormForProxy < ::Arbre::Rails::Forms::FormBuilderProxy
  # source://arbre//lib/arbre/rails/forms.rb#46
  def build(resource, form_options = T.unsafe(nil), &block); end

  # source://arbre//lib/arbre/rails/forms.rb#69
  def closing_tag; end

  # source://arbre//lib/arbre/rails/forms.rb#55
  def fields_for(*args, &block); end

  # source://arbre//lib/arbre/rails/forms.rb#65
  def opening_tag; end

  # source://arbre//lib/arbre/rails/forms.rb#59
  def split_string_on(string, match); end
end

# source://arbre//lib/arbre/rails/rendering.rb#4
module Arbre::Rails::Rendering
  # source://arbre//lib/arbre/rails/rendering.rb#6
  def render(*args, &block); end
end

# source://arbre//lib/arbre/rails/template_handler.rb#4
class Arbre::Rails::TemplateHandler
  # source://arbre//lib/arbre/rails/template_handler.rb#5
  def call(template, source = T.unsafe(nil)); end
end

# source://arbre//lib/arbre/railtie.rb#10
class Arbre::Railtie < ::Rails::Railtie; end
